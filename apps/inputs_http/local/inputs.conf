[http]
port			= {{conf.port|default(8088)}}
disabled		= {{ conf.disabled|default(false)|string|lower }}
enableSSL		= {{ conf.enable_SSL |default(true)|string|lower }}
			{%- if conf.output_group is defined %}
outputgroup		= {{conf.output_group}}{%endif%}
			{%- if conf.index is defined %}
index			= {{conf.index}}{%endif%}
			{%- if conf.sourcetype is defined %}
sourcetype		= {{conf.sourcetype}}{%endif%}
			{%- if conf.io_threads is defined %}
dedicatedIoThreads	= {{conf.io_threads}}{%endif%}
			{%- if conf.max_sockets is defined %}
maxSockets		= {{conf.max_sockets}}{%endif%}
			{%- if conf.max_threads is defined %}
maxThreads		= {{conf.max_threads}}{%endif%}
			{%- if conf.keep_alive_timeout is defined %}
keepAliveIdleTimeout 	= {{conf.keep_alive_timeout}}{%endif%}
			{%- if conf.keep_alive_busy_timeout is defined %}
busyKeepAliveIdleTimeout={{conf.keep_alive_busy_timeout}}{%endif%}
			{%- if conf.ack_idle_cleanup is defined %}
ackIdleCleanup		= {{conf.ack_idle_cleanup}}{%endif%}
			{%- if conf.ack_idle_time is defined %}
maxIdleTime		= {{conf.ack_idle_time}}{%endif%}
			{%- if conf.channel_cookie is defined %}
channel_cookie		= {{conf.channel_cookie}}{%endif%}
			{%- if conf.max_event_size is defined %}
maxEventSize		= {{conf.max_event_size}}{%endif%}
			{%- if conf.force_http_10 is defined %}
forceHttp10		= {{conf.force_http_10|default("never",true)}}{%endif%}
			{%- if conf.cross_origin_sharing_header is defined %}
crossOriginSharingHeaders={{conf.cross_origin_sharing_header|join(",")}}{%endif%}

 
{%- for header in conf.headers %}
			{%- if header.name and header.value and not header.skip %}
replyHeader.{{header.name}}	= {{header.value}}{%endif%}
{%endfor%}


{%- if conf.SSL is defined %}
# SSL Config
					{%- if conf.SSL.require_client_cert is defined %}
requireClientCert		= {{conf.SSL.require_client_cert|default(true)|string|lower}}{%endif%}
					{%- if conf.SSL.bundle_path %}
serverCert			= {{conf.SSL.bundle_path|default("/etc/tls/private/splunk.pem",true)}}{%endif%}
					{%- if conf.SSL.key_password is defined %}
sslPassword			= {{conf.SSL.key_password}}{%endif%}
					{%- if conf.SSL.ssl_versions is defined %}
sslVersions			= {{conf.SSL.ssl_versions|join(",")}}{%-endif%}
					{%- if conf.SSL.cipher_suites is defined %}
cipherSuite			= {{conf.SSL.cipher_suites|join(",")}}{%-endif%}
					{%- if conf.SSL.ecdh_curves is defined %}
ecdhCurves			= {{conf.SSL.ecdh_curves|join(",")}}{%-endif%}
					{%- if conf.SSL.handshake_timeout is defined %}
sslServerHandshakeTimeout	= {{conf.SSL.handshake_timeout|default(60,true)}}{%-endif%}
					{%- if conf.peer_CNs is defined %}
sslCommonNameToCheck		= {{conf.peer_CNs|join(",")}}{%-endif%}
					{%- if conf.peer_SANs is defined %}
sslAltNameToCheck 		= {{conf.peer_SANs|join(",")}}{%-endif%}
					{%- if conf.SSL.hsts is defined %}
sendStrictTransportSecurityHeader={{conf.SSL.hsts|default(true)|string|lower}}{%-endif%}
					{%- if conf.SSL.compression is defined %}
allowSslCompression		= {{conf.SSL.compression|string|lower}}{%-endif%}
					{%- if conf.SSL.allow_renegotiation is defined %}
allowSslRenegotiation		= {{conf.SSL.allow_renegotiation}}{%endif%}
{%-endif%}

{%- for token in conf.tokens -%}
[http://{{token.name}}]
disabled		= {{ token.disabled|default(false)|string|lower }}
token			= {{token.token}}
			{%- if token.description%}
description		= {{token.description}}{%endif%}
			{%- if token.indexes %}
indexes			= {{token.indexes|join(",")}}{%endif%}
			{%- if token.index %}
index			= {{token.index}}{%endif%}
			{%- if token.source  %}
source			= {{token.source}}{%endif%}
			{%- if token.sourcetype %}
sourcetype		= {{token.sourcetype}}{%endif%}
			{%- if token.output_group  %}
outputgroup		= {{token.output_group}}{%endif%}
			{%- if token.q_size %}
queueSize		= {{token.q_size}}{%endif%}
			{%- if token.persistent_q_size %}
persistentQueueSize	= {{token.persistent_q_size}}{%endif%}
			{%- if token.connection_host %}
connection_host		= {{token.connection_host}}{%endif%}
			{%- if token.use_ack %}
useACK			= {{token.use_ack|default(true)|string|lower}}{%endif%}
			{%- if token.allow_query_string_auth %}
allowQueryStringAuth	= {{token.allow_query_string_auth|default(true)|string|lower}}{%endif%}
{% endfor %}
